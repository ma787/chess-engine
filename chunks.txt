Piece Class:

check_if_move_possible: Checks if moving to the destination is possible with the piece's move-set.


Board Class:

__repr__: Alternate print function which outputs the board as a string of unicode symbols corresponding to piece type/colour.

is_square_controlled: Checks if a square on the board is being attacked by an enemy piece.


Move Class:

check_move: Runs the piece move checking function.

check_castle_move: Checks if a castling move is legal.

try_move: Simulates the move to check if it's legal.

perform_move: Moves the piece to the destination square.

perform_castle_move: Castles by moving the king and the rook.


Game Class:

convert_lan_to_move: Validates and changes the move string entered by the user to a class and coordinates.

is_in_check: Checks if the side to move is in check.

check_end_of_game: Checks if the game is over due to checkmate, stalemate, the fifty move rule or threefold repetition.

play_game: Executes a loop that runs the game itself, taking move inputs and keeping track of turns.
(updates the player scores, fifty-move count, the virtual board and the array containing the last 12 move strings for threefold repetition)

play_against_engine: Runs the game but against the chess engine instead of another player.


Main: Allows the user to choose which type of game they want to play and gives them the choice to replay.